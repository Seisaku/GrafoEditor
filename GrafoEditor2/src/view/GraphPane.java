/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Graphics;
import java.awt.Point;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import viewcontrol.EdgeControl;
import viewcontrol.GraphControl;
import viewcontrol.NodeControl;

/**
 *
 * @author I839169
 */
public class GraphPane extends javax.swing.JPanel {

    private GraphControl GC;
    private BufferedImage BI;

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        if (BI == null) {
            this.startBI();
        }
        EdgeControl ec;
        NodeControl nc;
        Point A, B;
        for (int i = 0; i < GC.getECsize(); i++) {
            ec = this.GC.getEC(i);
            A = ec.getA().getPoint();
            B = ec.getB().getPoint();
            g.drawLine(A.x, A.y, B.x, B.y);
        }
        for (int i = 0; i < GC.getNCsize(); i++) {
            nc = this.GC.getNC(i);
            g.drawOval(nc.getPoint().x, nc.getPoint().y, 5, 5);
            g.drawImage(BI, nc.getPoint().x, nc.getPoint().y, this);
        }

    }

    public void startBI() {
        try {
            BI = ImageIO.read(new URL("resource//Node.png"));
        } catch (IOException ex) {
            Logger.getLogger(GraphPane.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Creates new form GraphPane
     */
    public GraphPane() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        this.GC.addNode("",evt.getPoint());
       
    }//GEN-LAST:event_formMouseClicked

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
      this.GC.searchPoint(evt.getPoint());
    }//GEN-LAST:event_formMouseMoved

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
